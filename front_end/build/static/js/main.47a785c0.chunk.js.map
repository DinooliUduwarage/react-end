{"version":3,"sources":["component/assetsetting/assetsettingComponents/OwnAsset.js","component/Assetrequest/Assetreqside.js","component/assetsetting/assetsettingComponents/Restore.js","component/assetsetting/assetsettingComponents/Brekdown.js","component/assetsetting/AssetSettingContents.js","component/SidebarComponent/EmployeeSettingSidebar.js","component/SidebarComponent/AssetSettingSidebar.js","component/Export.js","component/SidebarComponent/ExportSidebar.js","component/EmployeeSetting/employeeSettingComponents/Add.js","component/EmployeeSetting/employeeSettingComponents/Update.js","component/EmployeeSetting/EmployeeSettingcomponent.js","component/EmployeeSetting/employeeSettingComponents/Main.js","component/Nawb.js","component/TestLogin.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["TextareaPage","Component","react_default","a","createElement","mdbreact","type","label","rows","icon","BasicTable","props","hover","Sidebar","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","OwnAsset","Restore","Brekdown","Gatepass_default","Add_default","Update_default","Delete_default","Findby_default","All_default","renderSelector","match","params","id","hamburgerMenuPage","state","collapseID","hit","toggleCollapse","_this","setState","prevState","fluid","color","style","marginTop","light","onClick","isOpen","navbar","left","active","to","Export","textWhite","employeeSettingComponents_Add","employeeSettingComponents_Update","employeeSettingComponents_Delete_default","FullPageIntroWithFixedNavbar","finduser","axiosConfig","headers","Content-Type","X-Requested-With","Authorization","newtoken","axios","get","ContentType","then","res","status","console","log","catch","err","collapse","isWideEnough","bind","assertThisInitialized","token","BrowserRouter","size","dark","expand","fixed","href","sm","Route","path","component","ARSidebar","EMSidebar","ASSidebar","EXSidebar","Switch","ASContent","ESContent","React","fakeAuthCentralState","isAuthenticated","access_token","authenticate","callback","signout","Protected","Login","handleEmail","event","email","target","value","handlePassword","password","handleSubmit","preventDefault","apicall","login","redirectToReferrer","length","_this2","postData","post","data","history","push","from","location","pathname","md","onSubmit","className","group","validate","autoFocus","error","success","onChange","disabled","validateForm","ProtectedRoute","_ref2","rest","objectWithoutProperties","assign","render","Redirect","App","withRouter","_ref3","Nawb","isAuthed","TestLogin_ProtectedRoute","TestLogin","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.47a785c0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nconst TextareaPage = () => {\r\n    return (\r\n        <MDBInput\r\n          type=\"textarea\"\r\n          label=\"Icon Prefix\"\r\n          rows=\"2\"\r\n          icon=\"pencil-alt\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextareaPage;","import React, { Component } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, NavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBContainer }\r\nfrom 'mdbreact';\r\n\r\nclass hamburgerMenuPage extends Component {\r\nstate = {\r\n  collapseID: ''\r\n}\r\n\r\ntoggleCollapse = collapseID => () => {\r\n  this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <MDBContainer fluid>\r\n      <MDBNavbar color=\"light-blue lighten-4\" style={{ marginTop: '20px' }} light>\r\n        <MDBContainer>\r\n          <MDBNavbarBrand>\r\n            Navbar\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={this.toggleCollapse('navbarCollapse1')} />\r\n          <MDBCollapse id=\"navbarCollapse1\" isOpen={this.state.collapseID} navbar>\r\n            <NavbarNav left>\r\n              <MDBNavItem active>\r\n                <MDBNavLink to=\"/AssetRequest/RequestForm\">Asset Request Form</MDBNavLink>\r\n              </MDBNavItem>\r\n            </NavbarNav>\r\n          </MDBCollapse>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hamburgerMenuPage;","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nconst BasicTable = props => {\r\n  return (\r\n    <MDBTable hover>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>First</th>\r\n          <th>Last</th>\r\n          <th>Handle</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Larry</td>\r\n          <td>the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default BasicTable;","import React from 'react'\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nconst TextareaPage = () => {\r\n    return (\r\n        <MDBInput\r\n          type=\"textarea\"\r\n          label=\"Icon Prefix\"\r\n          rows=\"2\"\r\n          icon=\"pencil-alt\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextareaPage;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router,Route,Link,Switch } from 'react-router-dom';\r\nimport Arequest from '../Assetrequest/Assetreqside';\r\n \r\n// import Assetset from './assetsetting/Assetsetside';\r\n// import Export from './Export';\r\n// import Notfi from './Notification';\r\n// import Log from './Logout';\r\nimport Img from '../../logo.svg';\r\n\r\nimport Own from './assetsettingComponents/OwnAsset';\r\nimport Re from './assetsettingComponents/Restore';\r\nimport Brek from './assetsettingComponents/Brekdown';\r\nimport Gate from './assetsettingComponents/Gatepass';\r\nimport Add from './assetsettingComponents/Add';\r\nimport Update from './assetsettingComponents/Update';\r\nimport Delete from './assetsettingComponents/Delete';\r\nimport Findby from './assetsettingComponents/Findby';\r\nimport All from './assetsettingComponents/All';\r\n\r\n\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n      }\r\n\r\n    //   componentDidMount(){\r\n    //       this.setState({\r\n    //           x:this.props.match.params.id\r\n    //       })\r\n    //       console.log(this.props.match.params.id)\r\n    //       console.log(this.state.x)\r\n          \r\n    //   } \r\n\r\n      renderSelector(e){\r\n        switch(e){\r\n            case \"ViewOwn\":\r\n                return <Own/>;\r\n            case \"Restore\":\r\n                return <Re/>;\r\n            case \"Break\":\r\n                return <Brek/>;\r\n            case \"Gate\":\r\n                return <Gate/>;\r\n            case \"Add\":\r\n                return <Add/>;\r\n            case \"Update\":\r\n                return <Update/>;\r\n            case \"Delete\":\r\n                return <Delete/>;\r\n            case \"Findby\":\r\n                return <Findby/>;\r\n            case \"All\":\r\n                return <All/>;\r\n            // case \"Break\":\r\n            //     return <img src={Img} width=\"1000\" height=\"500\" />;\r\n\r\n        }\r\n      }\r\n    render() { \r\n        return ( \r\n            <div>\r\n            {this.renderSelector(this.props.match.params.id)}\r\n            </div> \r\n             );\r\n    }\r\n}\r\n \r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, NavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBContainer }\r\nfrom 'mdbreact';\r\n\r\nclass hamburgerMenuPage extends Component {\r\nstate = {\r\n  collapseID: '',\r\n  hit:\"\"\r\n}\r\n\r\ntoggleCollapse = collapseID => () => {\r\n  this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <MDBContainer fluid>\r\n      <MDBNavbar color=\"light-blue lighten-4\" style={{ marginTop: '20px' }} light>\r\n        <MDBContainer>\r\n          <MDBNavbarBrand>\r\n            Navbar\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={this.toggleCollapse('navbarCollapse1')} />\r\n          <MDBCollapse id=\"navbarCollapse1\" isOpen={this.state.collapseID} navbar>\r\n            <NavbarNav left>\r\n              <MDBNavItem active>\r\n                <MDBNavLink to=\"/EmployeeSetting/Add\">Add Employees</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/EmployeeSetting/Update\">Update Employees</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/EmployeeSetting/Delete\">Delete Employees</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/EmployeeSetting/Custom\">customize Passward And Level</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/EmployeeSetting/Change\">Change Employee Department</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/EmployeeSetting/All\">view All Employee Records</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/EmployeeSetting/Req\">Asset Request</MDBNavLink>\r\n              </MDBNavItem>\r\n            </NavbarNav>\r\n          </MDBCollapse>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hamburgerMenuPage;","import React, { Component } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, NavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBContainer }\r\nfrom 'mdbreact';\r\nimport { BrowserRouter as Router,Route,Link,Switch } from 'react-router-dom';\r\n\r\n\r\nclass hamburgerMenuPage extends Component {\r\nstate = {\r\n  collapseID: ''\r\n}\r\n\r\ntoggleCollapse = collapseID => () => {\r\n  this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\r\n}\r\n\r\nrender() {\r\n  return (\r\n    //  <Router>\r\n    <MDBContainer fluid>\r\n      <MDBNavbar color=\"light-blue lighten-4\" style={{ marginTop: '20px' }} light>\r\n        <MDBContainer>\r\n          <MDBNavbarBrand>\r\n            Navbar\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={this.toggleCollapse('navbarCollapse1')} />\r\n          <MDBCollapse id=\"navbarCollapse1\" isOpen={this.state.collapseID} navbar>\r\n            <NavbarNav left>\r\n              <MDBNavItem active>\r\n                <MDBNavLink to=\"/AssetSetting/ViewOwn\">View Own Assets</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/Break\">View Breakdown And Restore Assets</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/Restore\">View Restore Records</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/Gate\">Gatepass And View Details</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/Add\">Add Assets</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/Update\">Update Assets</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/Delete\">Delete Assets</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/Findby\">Find User Assets</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/AssetSetting/All\">View All Codes And History</MDBNavLink>\r\n              </MDBNavItem>\r\n            </NavbarNav>\r\n          </MDBCollapse>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    </MDBContainer>\r\n\r\n    //     {/* <Route path=\"/AssetSetting/ViewOwn\"   component={Own}/>  */}\r\n    //     {/*<Route path=\"/AssetSetting/Break\"   component={Brek}/>\r\n    //     <Route path=\"/AssetSetting/Restore\"   component={Re}/>\r\n    //     <Route path=\"/AssetSetting/Gate\"   component={Gate}/>\r\n    //     <Route path=\"/AssetSetting/Add\"   component={Add}/>\r\n    //     <Route path=\"/AssetSetting/Update\"   component={Update}/>\r\n    //     <Route path=\"/AssetSetting/Delete\"   component={Delete}/>\r\n    //     <Route path=\"/AssetSetting/Findby\"   component={Findby}/>\r\n    //     <Route path=\"/AssetSetting/All\"   component={All}/> */}\r\n    //  {/* </Router> */}\r\n    );\r\n  }\r\n}\r\n\r\nexport default hamburgerMenuPage;","import React, { Component } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, NavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBContainer }\r\nfrom 'mdbreact';\r\n\r\nclass hamburgerMenuPage extends Component {\r\nstate = {\r\n  collapseID: ''\r\n}\r\n\r\ntoggleCollapse = collapseID => () => {\r\n  this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <MDBContainer fluid>\r\n      <MDBNavbar color=\"light-blue lighten-4\" style={{ marginTop: '20px' }} light>\r\n        <MDBContainer>\r\n          <MDBNavbarBrand>\r\n            Navbar\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={this.toggleCollapse('navbarCollapse1')} />\r\n          <MDBCollapse id=\"navbarCollapse1\" isOpen={this.state.collapseID} navbar>\r\n            <NavbarNav left>\r\n              <MDBNavItem active>\r\n                <MDBNavLink to=\"#!\">export here</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"#!\">bro</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"#!\">Profile</MDBNavLink>\r\n              </MDBNavItem>\r\n            </NavbarNav>\r\n          </MDBCollapse>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hamburgerMenuPage;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router,Route,Link,Switch } from 'react-router-dom';\r\nimport Export from '../Export';\r\nclass Sidebar extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Export/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Sidebar;","import React from 'react'\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nconst TextareaPage = () => {\r\n    return (\r\n        <MDBInput\r\n          type=\"textarea\"\r\n          label=\"Icon Prefix\"\r\n          rows=\"2\"\r\n          icon=\"pencil-alt\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextareaPage;","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nconst BasicTable = props => {\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead color=\"primary-color\" textWhite>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>First</th>\r\n          <th>Last</th>\r\n          <th>Handle</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Larry</td>\r\n          <td>the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default BasicTable;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router,Route,Link,Switch } from 'react-router-dom';\r\nimport Arequest from '../Assetrequest/Assetreqside';\r\n \r\n// import Assetset from './assetsetting/Assetsetside';\r\n// import Export from './Export';\r\n// import Notfi from './Notification';\r\n// import Log from './Logout';\r\nimport Img from '../../logo.svg';\r\n\r\nimport Adde from './employeeSettingComponents/Add';\r\nimport Update from './employeeSettingComponents/Update';\r\nimport Delete from './employeeSettingComponents/Delete';\r\nimport Custom from './employeeSettingComponents/Custom';\r\nimport Change from './employeeSettingComponents/ChangeDep';\r\nimport Alle from './employeeSettingComponents/AllRecords';\r\nimport Reqe from './employeeSettingComponents/AssetRequest';\r\nimport Mainemp from './employeeSettingComponents/Main';\r\n\r\n\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n      }\r\n\r\n    //   componentDidMount(){\r\n    //       this.setState({\r\n    //           x:this.props.match.params.id\r\n    //       })\r\n    //       console.log(this.props.match.params.id)\r\n    //       console.log(this.state.x)\r\n          \r\n    //   } \r\n\r\n      renderSelector(e){\r\n        switch(e){\r\n            case \"ViewOwn\":\r\n                return <Adde/>;\r\n            case \"Restore\":\r\n                return <Update/>;\r\n            case \"Break\":\r\n                return <Delete/>;\r\n            // case \"Gate\":\r\n            //     return <Gate/>;\r\n            // case \"Add\":\r\n            //     return <Add/>;\r\n            // case \"Update\":\r\n            //     return <Update/>;\r\n            // case \"Delete\":\r\n            //     return <Delete/>;\r\n            // case \"Findby\":\r\n            //     return <Findby/>;\r\n            // case \"All\":\r\n            //     return <All/>;\r\n            // case \"Break\":\r\n            //     return <img src={Img} width=\"1000\" height=\"500\" />;\r\n\r\n        }\r\n      }\r\n    render() { \r\n        return ( \r\n            <div>\r\n            {this.renderSelector(this.props.match.params.id)}\r\n            </div> \r\n             );\r\n    }\r\n}\r\n \r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router,Route,Link,Switch } from 'react-router-dom';\r\nimport Adde from './Add';\r\nimport Updatee from './Update';\r\n\r\nclass Maintool extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <Router>\r\n        <div>\r\n        <Route path=\"/EmployeeSetting/Add\"   component={Adde}/>\r\n        <Route path=\"/EmployeeSetting/Update\"   component={Updatee}/>\r\n        {/* <adde/>\r\n        <Updatee/> */}\r\n        </div>\r\n        </Router>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Maintool;","import React from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink,  MDBMask, MDBView } from 'mdbreact';\r\nimport { BrowserRouter as Router,Route,Link,Switch } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n// import Arequest from './Assetrequest/Assetreqside';\r\n// import Employee from './EmployeeSetting/Employeeside';\r\n// import Assetset from './assetsetting/Assetsetside';\r\n// import Export from './Export';\r\n// import Notfi from './Notification';\r\n// import Log from './Logout';\r\nimport ARSidebar from './assetsetting/AssetSettingContents';\r\nimport EMSidebar from './SidebarComponent/EmployeeSettingSidebar';\r\nimport ASSidebar from './SidebarComponent/AssetSettingSidebar';\r\nimport EXSidebar from './SidebarComponent/ExportSidebar';\r\n\r\nimport ASContent from './assetsetting/AssetSettingContents';\r\nimport ESContent from './EmployeeSetting/EmployeeSettingcomponent';\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\n\r\nclass FullPageIntroWithFixedNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false,\r\n      newtoken: 0,\r\n      status:0,\r\n      \r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n    this.finduser=this.finduser.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      newtoken: 'Bearer ' + this.props.token\r\n  });\r\n    this.finduser();\r\n  }\r\n  \r\nfinduser = () => {\r\n    var url = \"http://104.248.24.192/api/auth/user\";\r\n    var postData = {\r\n      ContentType: 'application/json',\r\n    };\r\n\r\n    var axiosConfig = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            'Authorization': this.state.newtoken\r\n        }\r\n    };\r\n    axios.get(url, postData, axiosConfig)\r\n        .then((res) => {\r\n            this.setState({\r\n                status: res.status\r\n                \r\n            });\r\n            console.log(\"inide the axios\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"aiyo AXIOS ERROR: \", err);\r\n        })\r\n    \r\n}\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <MDBContainer fluid>\r\n      <MDBRow>\r\n        \r\n      </MDBRow>\r\n      <MDBRow>\r\n        <MDBCol size=\"12\">\r\n        \r\n        <div>\r\n        <header>\r\n          \r\n            <MDBNavbar color=\"indigo\" dark expand=\"md\" fixed=\"top\">\r\n              <MDBNavbarBrand href=\"/\">\r\n                <strong>SimCentric</strong>\r\n              </MDBNavbarBrand>\r\n              {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\r\n              <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                <MDBNavbarNav left>\r\n                  <MDBNavItem active>\r\n                    <MDBNavLink to=\"/AssetRequest\">Asset Request</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/EmployeeSetting\">Employee Setting</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/AssetSetting/ViewOwn\">Asset Setting</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/Export\">Export</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/Notification\">Notification</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/Logout\">Logout</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              </MDBCollapse>\r\n           \r\n            </MDBNavbar>\r\n            \r\n            \r\n          \r\n        </header>\r\n        <main>\r\n        \r\n        </main>\r\n      </div>\r\n\r\n\r\n        </MDBCol>\r\n       \r\n      </MDBRow>\r\n\r\n      <MDBRow >\r\n        \r\n        <MDBCol sm=\"3\">\r\n        \r\n        <Route path=\"/AssetRequest\"   component={ARSidebar}/>\r\n        <Route path=\"/EmployeeSetting/:id\"    component={EMSidebar}/>\r\n        <Route path=\"/AssetSetting/:id\"    component={ASSidebar}/>\r\n        <Route path=\"/Export\"    component={EXSidebar}/>\r\n        \r\n        </MDBCol>\r\n        \r\n        <MDBCol sm=\"9\">\r\n        <Switch>\r\n        <Route path=\"/AssetSetting/:id\"    component={ASContent}/>\r\n        <Route path=\"/EmployeeSetting/:id\"   component={ESContent}/>\r\n\r\n        </Switch>\r\n        </MDBCol>\r\n        \r\n       \r\n      </MDBRow>\r\n\r\n      \r\n    </MDBContainer>\r\n    </Router>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default FullPageIntroWithFixedNavbar;","\r\nimport React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,  } from \"mdbreact\";\r\nimport axios from \"axios\";\r\n//import Nav from \"./TestNav\";\r\nimport Nav from \"./Nawb\";\r\nimport '../index.css';\r\n\r\nimport { BrowserRouter, Route, Link, Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst fakeAuthCentralState = {\r\n    isAuthenticated: false,\r\n    access_token : \"aaaaaaa\",\r\n    authenticate(callback) {\r\n        this.isAuthenticated = true;\r\n    },\r\n    signout(callback) {\r\n        this.isAuthenticated = false;\r\n    }\r\n};\r\n\r\nconst Public = () => <h3>Public Content</h3>;\r\nconst Protected = () => <h3>Protected Content</h3>;\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirectToReferrer: false,\r\n            email: \"\",\r\n            password: \"\",\r\n            access_token : \"aaaaaaa\",\r\n            status:0\r\n        };\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.email.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleEmail = event => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    };\r\n\r\n    handlePassword = event => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(\"done loging\");\r\n        this.apicall();\r\n    };\r\n\r\n    apicall() {\r\n\r\n        var url = \"http://104.248.24.192/api/auth/login\";\r\n        var postData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n\r\n        let axiosConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"X-Requested-With\": \"XMLHttpRequest\",\r\n            }\r\n        };\r\n\r\n        axios.post(url, postData, axiosConfig)\r\n            .then((res) => {\r\n                this.setState({\r\n                    access_token: res.data.access_token\r\n                });\r\n                this.login();\r\n                fakeAuthCentralState.access_token=this.state.access_token;\r\n                this.props.history.push(\"/protected/dashboard\");\r\n                console.log(\"RESPONSE RECEIVED: \", res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"AXIOS ERROR: \", err);\r\n            })\r\n    }\r\n\r\n    login = () => {\r\n        fakeAuthCentralState.authenticate(() => {\r\n            this.setState(() => ({\r\n                redirectToReferrer: true\r\n            }));\r\n        });\r\n        \r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } };\r\n        const { redirectToReferrer } = this.state;\r\n\r\n        if (redirectToReferrer === true) {\r\n            this.props.history.push(from.pathname);\r\n        }\r\n\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n                            <div className=\"grey-text\">\r\n                                <MDBInput\r\n                                    label=\"Type your email\"\r\n                                    icon=\"envelope\"\r\n                                    group\r\n                                    type=\"email\"\r\n                                    validate\r\n                                    autoFocus\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleEmail}\r\n                                />\r\n                                <MDBInput\r\n                                    label=\"Type your password\"\r\n                                    icon=\"lock\"\r\n                                    group\r\n                                    type=\"password\"\r\n                                    validate\r\n                                    value={this.state.password}\r\n                                    onChange={this.handlePassword}\r\n                                />\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <MDBBtn disabled={!this.validateForm()} type=\"submit\">\r\n                                    Login\r\n                </MDBBtn>\r\n                            </div>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        fakeAuthCentralState.isAuthenticated === true\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/login',\r\n                state: { from: props.location }\r\n            }} />\r\n    )} />\r\n);\r\n\r\nconst AuthButton = withRouter(({ history }) => (\r\n    fakeAuthCentralState.isAuthenticated ? (\r\n        <p>\r\n            Welcome to this amazing content! <button onClick={() => {\r\n                fakeAuthCentralState.signout(() => history.push('/login'))\r\n            }}>Sign out</button>\r\n        </p>\r\n    ) : (\r\n            <p>You are not logged in.</p>\r\n        )\r\n));\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    \r\n\r\n    render() {\r\n        \r\n        return <div className=\"App\">\r\n            <BrowserRouter>\r\n              <div>\r\n                   { \r\n                        fakeAuthCentralState.isAuthenticated === false ?\r\n                            <Redirect to=\"/login\" />\r\n                            : <div></div>\r\n                        \r\n                    }\r\n                {/* <AuthButton /> */}\r\n\r\n                {/* <Link to=\"/protected/go\">Protected Content go</Link> */}\r\n                {/* <Link to=\"/public\">Public Content</Link>\r\n                <Link to=\"/protected\">Protected Content</Link>\r\n                    <Link to=\"/protected/dashboard\">Protected Content go</Link> */}\r\n\r\n                <Route path=\"/protected/dashboard\" render={props => <Nav {...props} isAuthed=\"fgd\" token={fakeAuthCentralState.access_token} />} />\r\n                {/* <Route path=\"/public\" component={Public} /> */}\r\n                {/* <Route path=\"/protected/go\" component={Nav} /> */}\r\n\r\n                <MDBContainer fluid>\r\n                  <MDBRow>\r\n                    <MDBCol size=\"1\"></MDBCol>\r\n                    <MDBCol size=\"11\">\r\n                      <Route path=\"/login\" component={withRouter(Login)} />\r\n                    </MDBCol>\r\n                    {/* <MDBCol size=\"2\">.col-4</MDBCol> */}\r\n                  </MDBRow>\r\n                </MDBContainer>\r\n\r\n                <ProtectedRoute path=\"/protected\" component={Protected} />\r\n              </div>\r\n            </BrowserRouter>\r\n          </div>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n// import Button from \"./component/TestNav\";\r\n// import Appp from \"./component/App\";\r\nimport Auth from \"./component/TestLogin\";\r\n//import Naw from \"./component/Nawb\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Button /> */}\r\n        <Auth />\r\n        {/* <Appp /> */}\r\n        {/* <Naw/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}