{"version":3,"sources":["components/AuthRoute.js","components/UnauthRoute.js","containers/UnknownPage.js","containers/assets/AssetBreakdown.js","containers/assets/AssetManage.js","containers/assets/AssetOwned.js","containers/assets/AssetOwnedEmp.js","containers/assets/AssetPoolView.js","containers/assets/AssetRequest.js","containers/assets/AssetRequestHandle.js","containers/assets/AssetTransfer.js","components/HomeRoutes.js","containers/AssetSettings.js","containers/EmployeeSettings.js","containers/DepartmentSettings.js","containers/Home.js","containers/Login.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AuthRoute","_ref","Comp","component","childProps","props","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","isAuth","Redirect","to","concat","location","pathname","search","UnauthRoute","redirect","name","url","arguments","length","undefined","window","href","replace","results","RegExp","exec","decodeURIComponent","querystring","UnknownPage","className","AssetBreakdown","React","Component","AssetManage","AssetOwned","AssetOwnedEmp","AssetPoolView","AssetRequest","AssetRequestHandle","AssetTransfer","HomeRoutes","Switch","components_AuthRoute","path","AssetSettings","all","_this","levelAuth","admin","depth","finan","emplo","mdbreact_esm","hidden","this","nav","caret","icon","right","EmployeeSettings","DepartmentSettings","far","Home","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCollapse","setState","isOpen","state","handleLogout","setAuth","setToken","history","push","collapse","isWideEnough","onClick","bind","assertThisInitialized","accessToken","light","expand","fixed","navbar","left","containers_AssetSettings","containers_EmployeeSettings","containers_DepartmentSettings","src","alt","overlay","components_HomeRoutes","align","Login","handleChange","event","defineProperty","target","id","value","handleSubmit","preventDefault","apicall","email","password","status","_this2","postData","Axios","post","headers","Content-Type","X-Requested-With","then","res","data","access_token","console","log","catch","err","md","onSubmit","label","group","type","validate","error","success","onChange","color","disabled","validateInput","Routes","exact","components_UnauthRoute","App","setAuthentication","isAuthenticated","setAccessToken","isAuthenticating","levelOfAuthentication","src_Routes","Boolean","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2849c57.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// This custom Route is used for authenticated routing.\r\n// If the user is authenticated, he can navigate as usual. (Route normally)\r\n// Else the user is redirected to the Login page.\r\n\r\nlet AuthRoute = ({ component: Comp, props: childProps, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (\r\n                childProps.isAuth\r\n                    ? <Comp {...props} {...childProps} />\r\n                    : <Redirect to={`/login?redirect=${props.location.pathname}${props.location.search}`} />\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// This custom route is used for Unauthenticated routing.\r\n// if the user is not authenticated, he can navigate through\r\n// non-protected content freely. (normal routing)\r\n// Else the user is redirected to the last page which he/she\r\n// was accessing before being unauthorized.\r\n\r\n// Following funtion is used for striping special characters from URL,\r\n// and replacing them with normal characters to produce a URL string\r\n// in the form of a pathname. (for routing)\r\nfunction querystring(name, url = window.location.href) {\r\n    name = name.replace(/[[]]/g, \"//$&\");\r\n\r\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n    const results = regex.exec(url);\r\n\r\n    if (!results) {\r\n        return null;\r\n    }\r\n    if (!results[2]) {\r\n        return \"\";\r\n    }\r\n    else {\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    }\r\n}\r\n\r\nlet UnauthRoute = ({ component: Comp, props: childProps, ...rest }) => {\r\n    const redirect = querystring(\"redirect\");\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (\r\n                !childProps.isAuth\r\n                    ? <Comp {...props} {...childProps} />\r\n                    : <Redirect to={redirect === \"\" || redirect === null ? \"/home\" : redirect} />\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nexport default UnauthRoute;\r\n","import React from 'react';\r\nimport './css/UnknownPage.css';\r\n\r\nlet UnknownPage = () => (\r\n    <div className=\"UnknownPage\">\r\n        <h1>ERROR 404</h1>\r\n        <h2>Sorry, Page you're looking for is not here!</h2>\r\n    </div>\r\n);\r\n\r\nexport default UnknownPage;\r\n","import React from 'react';\r\n\r\nclass AssetBreakdown extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetBreakdown\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetBreakdown;\r\n","import React from 'react';\r\n\r\nclass AssetManage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetManage\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetManage;\r\n","import React from 'react';\r\n\r\nclass AssetOwned extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetOwned\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetOwned;\r\n","import React from 'react';\r\n\r\nclass AssetOwnedEmp extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetOwnedEmp\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetOwnedEmp;\r\n","import React from 'react';\r\n\r\nclass AssetPoolView extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetPoolView\">\r\n                <p>No asset pool here, BOI!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetPoolView;\r\n","import React from 'react';\r\n\r\nclass AssetRequest extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetRequest\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetRequest;\r\n","import React from 'react';\r\n\r\nclass AssetRequestHandle extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetRequestHandle\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetRequestHandle;\r\n","import React from 'react';\r\n\r\nclass AssetTransfer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"AssetTransfer\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetTransfer;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport AuthRoute from './AuthRoute';\r\nimport UnknownPage from '../containers/UnknownPage';\r\n// Importing containers related to Asset settings\r\nimport AssetBreakdown from '../containers/assets/AssetBreakdown';\r\nimport AssetManage from '../containers/assets/AssetManage';\r\nimport AssetOwned from '../containers/assets/AssetOwned';\r\nimport AssetOwnedEmp from '../containers/assets/AssetOwnedEmp';\r\nimport AssetPoolView from '../containers/assets/AssetPoolView';\r\nimport AssetRequest from '../containers/assets/AssetRequest';\r\nimport AssetRequestHandle from '../containers/assets/AssetRequestHandle';\r\nimport AssetTransfer from '../containers/assets/AssetTransfer';\r\n\r\nlet HomeRoutes = ({ childProps }) => (\r\n    <Switch>\r\n        <AuthRoute path=\"/home/assetbreakdown\" component={AssetBreakdown} props={childProps} />\r\n        <AuthRoute path=\"/home/assetmanage\" component={AssetManage} props={childProps} />\r\n        <AuthRoute path=\"/home/assetowned\" component={AssetOwned} props={childProps} />\r\n        <AuthRoute path=\"/home/assetownedemp\" component={AssetOwnedEmp} props={childProps} />\r\n        <AuthRoute path=\"/home/assetpool\" component={AssetPoolView} props={childProps} />\r\n        <AuthRoute path=\"/home/assetrequest\" component={AssetRequest} props={childProps} />\r\n        <AuthRoute path=\"/home/assetrequesthandle\" component={AssetRequestHandle} props={childProps} />\r\n        <AuthRoute path=\"/home/assettransfer\" component={AssetTransfer} props={childProps} />\r\n        \r\n        {/* For unmatching URLs, following is the 404 page */}\r\n        <Route component={UnknownPage} />\r\n    </Switch>\r\n);\r\n\r\nexport default HomeRoutes;","import React from 'react';\r\nimport { MDBNavItem, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from 'mdbreact';\r\n\r\nclass AssetSettings extends React.Component {\r\n    all = (this.props.levelAuth === 0);\r\n    admin = (this.props.levelAuth === 1);\r\n    depth = (this.props.levelAuth === 2);\r\n    finan = (this.props.levelAuth === 3);\r\n    emplo = (this.props.levelAuth === 4);\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"AssetSettings\">\r\n                <MDBNavItem\r\n                    className=\"px-md-1\"\r\n                    hidden={!(this.admin || this.depth || this.finan || this.emplo || this.all)}\r\n                >\r\n                    <MDBDropdown>\r\n                        <MDBDropdownToggle nav caret>\r\n                            <div className=\"d-none d-md-inline\">\r\n                                <MDBIcon icon=\"box-open\" /> Assets\r\n                            </div>\r\n                        </MDBDropdownToggle>\r\n                        <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assetpool\"\r\n                                hidden={!(true)}\r\n                            >\r\n                                View Asset Pool\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assetowned\"\r\n                                hidden={!(this.emplo || this.all)}\r\n                            >\r\n                                View Owned Assets\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assetownedemp\"\r\n                                hidden={!(this.admin || this.depth || this.all)}\r\n                            >\r\n                                View Employee Assets\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assetrequest\"\r\n                                hidden={!(this.emplo || this.all)}\r\n                            >\r\n                                Request Asset\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assetbreakdown\"\r\n                                hidden={!(this.emplo || this.all)}\r\n                            >\r\n                                Report Breakdown\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assetrequesthandle\"\r\n                                hidden={!(this.admin || this.depth || this.all)}\r\n                            >\r\n                                Asset Requests\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assettransfer\"\r\n                                hidden={!(this.admin || this.all)}\r\n                            >\r\n                                Transfer Asset\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"/home/assetmanage\"\r\n                                hidden={!(this.admin || this.finan || this.all)}\r\n                            >\r\n                                Manage Assets\r\n                            </MDBDropdownItem>\r\n                        </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                </MDBNavItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssetSettings;\r\n","import React from 'react';\r\nimport { MDBNavItem, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from 'mdbreact';\r\n\r\nclass EmployeeSettings extends React.Component {\r\n    all = (this.props.levelAuth === 0);\r\n    admin = (this.props.levelAuth === 1);\r\n    depth = (this.props.levelAuth === 2);\r\n    finan = (this.props.levelAuth === 3);\r\n    emplo = (this.props.levelAuth === 4);\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"EmployeeSettings\">\r\n                <MDBNavItem\r\n                    className=\"px-md-1\"\r\n                    hidden={!(this.admin || this.depth || this.all)}\r\n                >\r\n                    <MDBDropdown>\r\n                        <MDBDropdownToggle nav caret>\r\n                            <div className=\"d-none d-md-inline\">\r\n                                <MDBIcon icon=\"user-tie\" /> Employees\r\n                            </div>\r\n                        </MDBDropdownToggle>\r\n                        <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                            <MDBDropdownItem\r\n                                href=\"#!\"\r\n                                hidden={!(this.admin || this.depth || this.all)}\r\n                            >\r\n                                View Employees\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"#!\"\r\n                                hidden={!(this.admin || this.all)}\r\n                            >\r\n                                Manage Employees\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"#!\"\r\n                                hidden={!(this.all)}\r\n                            >\r\n                                Something else here\r\n                            </MDBDropdownItem>\r\n                            <MDBDropdownItem\r\n                                href=\"#!\"\r\n                                hidden={!(this.all)}\r\n                            >\r\n                                Something else here\r\n                            </MDBDropdownItem>\r\n                        </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                </MDBNavItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeSettings;\r\n","import React from 'react';\r\nimport { MDBNavItem, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from 'mdbreact';\r\n\r\nclass DepartmentSettings extends React.Component {\r\n    all = (this.props.levelAuth === 0);\r\n    admin = (this.props.levelAuth === 1);\r\n    depth = (this.props.levelAuth === 2);\r\n    finan = (this.props.levelAuth === 3);\r\n    emplo = (this.props.levelAuth === 4);\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"DepartmentSettings\">\r\n                <MDBNavItem\r\n                    className=\"px-md-1\"\r\n                    hidden={!(this.admin || this.all)}\r\n                >\r\n                    <MDBDropdown>\r\n                        <MDBDropdownToggle nav caret>\r\n                            <div className=\"d-none d-md-inline\">\r\n                                <MDBIcon far icon=\"building\" /> Departments\r\n                            </div>\r\n                        </MDBDropdownToggle>\r\n                        <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                            <MDBDropdownItem href=\"#!\">Manage Departments</MDBDropdownItem>\r\n                            <MDBDropdownItem href=\"#!\">Another Action</MDBDropdownItem>\r\n                            <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                            <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                        </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                </MDBNavItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DepartmentSettings;\r\n","import React from 'react';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarBrand,\r\n    MDBContainer,\r\n    MDBCollapse,\r\n    MDBNavbarNav,\r\n    MDBNavbarToggler,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBMask,\r\n    MDBView,\r\n    MDBIcon\r\n} from 'mdbreact';\r\nimport HomeRooutes from '../components/HomeRoutes';\r\nimport AssetSettings from './AssetSettings';\r\nimport EmployeeSettings from './EmployeeSettings';\r\nimport DepartmentSettings from './DepartmentSettings';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            collapse: false,\r\n            isWideEnough: false,\r\n            isOpen: false\r\n        };\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        this.setState({\r\n            collapse: !this.state.collapse\r\n        });\r\n    }\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.setAuth(false);\r\n        // ==== ==== ==== ====\r\n        this.props.setToken(\"\");\r\n        // ==== ==== ==== ====\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        const childProps = {\r\n            isAuth: this.props.isAuth,\r\n            levelAuth: this.props.levelAuth,\r\n            accessToken: this.props.accessToken\r\n        };\r\n\r\n        return (\r\n            <div className=\"Home\">\r\n                <header>\r\n                    <MDBNavbar className=\"aqua-gradient z-depth-1-half\" light expand=\"md\" fixed=\"top\">\r\n                        <MDBNavbarBrand href=\"/\">\r\n                            <strong>SimCentric</strong>\r\n                        </MDBNavbarBrand>\r\n                        {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\r\n                        <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                            <MDBNavbarNav left>\r\n                                <AssetSettings levelAuth={this.props.levelAuth}/>\r\n                                <EmployeeSettings levelAuth={this.props.levelAuth} />\r\n                                <DepartmentSettings levelAuth={this.props.levelAuth} />\r\n                            </MDBNavbarNav>\r\n                            <MDBNavbarNav right>\r\n                                <MDBNavItem className=\"px-md-3\">\r\n                                    <MDBNavLink to=\"#\">\r\n                                        <MDBIcon icon=\"bell\" />\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem onClick={this.handleLogout}>\r\n                                    <MDBNavLink to=\"#\">\r\n                                        <MDBIcon icon=\"sign-out-alt\" />\r\n                                        <strong> Logout</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </MDBNavbar>\r\n\r\n                    <MDBView src=\"https://i.imgur.com/MUTuyOK.jpg\" alt=\"background image\">\r\n                        {/* https://mdbootstrap.com/img/Photos/Others/img%20(50).jpg */}\r\n                        <MDBMask overlay=\"light-blue-light\" className=\"flex-center flex-column text-center\">\r\n                            <HomeRooutes childProps={childProps} />\r\n                        </MDBMask>\r\n                    </MDBView>\r\n                </header>\r\n                \r\n                <main>\r\n                    <MDBContainer className=\"text-center my-5\">\r\n                        <p align=\"justify\">Quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                    </MDBContainer>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport {   \r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBIcon,\r\n    MDBCardHeader,\r\n    MDBBtn,\r\n    MDBInput \r\n} from 'mdbreact';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            status: 0\r\n        };\r\n    }\r\n\r\n    apicall() {\r\n\r\n        let url = \"http://104.248.24.192:8080/api/auth/login\";\r\n        let postData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n\r\n        let axiosConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"X-Requested-With\": \"XMLHttpRequest\",\r\n            }\r\n        };\r\n\r\n        Axios.post(url, postData, axiosConfig)\r\n            .then((res) => {\r\n                this.props.setToken(res.data.access_token);\r\n                // console.log(this.props.accessToken);\r\n                this.props.setAuth(true);\r\n                console.log(\"RESPONSE RECEIVED: \", res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"AXIOS ERROR: \", err);\r\n            })\r\n    }\r\n\r\n    // Validate whether the form is filled with required data\r\n    // before allowing submission.\r\n    validateInput() {\r\n        return (this.state.email.length > 0 && this.state.password.length > 0);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.apicall();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    <MDBCardHeader className=\"form-header tempting-azure-gradient rounded\">\r\n                                        <h3 className=\"my-3\">\r\n                                            <MDBIcon icon=\"lock\" /> Login:\r\n                                        </h3>\r\n                                    </MDBCardHeader>\r\n                                    <form onSubmit={this.handleSubmit}>\r\n                                        <div className=\"grey-text\">\r\n                                            <MDBInput\r\n                                                label=\"Type your email\"\r\n                                                icon=\"envelope\"\r\n                                                group\r\n                                                type=\"email\"\r\n                                                validate\r\n                                                error=\"wrong\"\r\n                                                success=\"right\"\r\n                                                \r\n                                                id=\"email\"\r\n                                                value={this.state.email}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <MDBInput\r\n                                                label=\"Type your password\"\r\n                                                icon=\"lock\"\r\n                                                group\r\n                                                type=\"password\"\r\n                                                validate\r\n\r\n                                                id=\"password\"\r\n                                                value={this.state.password}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"text-center mt-4\">\r\n                                            <MDBBtn\r\n                                                color=\"blue-grey\"\r\n                                                className=\"mb-3\"\r\n                                                type=\"submit\"\r\n\r\n                                                disabled={!(this.validateInput())}\r\n                                            >\r\n                                                Login\r\n                                        </MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport AuthRoute from './components/AuthRoute';\r\nimport UnauthRoute from './components/UnauthRoute';\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport UnknownPage from './containers/UnknownPage';\r\n\r\nlet Routes = ({ childProps }) => (\r\n    <Switch>\r\n        <Redirect exact path=\"/\" to=\"/home\" />\r\n        <AuthRoute path=\"/home\" component={Home} props={childProps} />\r\n        <UnauthRoute exact path=\"/login\" component={Login} props={childProps} />\r\n        {/* For unmatching URLs, following is the 404 page */}\r\n        <Route component={UnknownPage} />\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Routes from './Routes';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            isAuthenticating: true,\r\n            accessToken: \"\",\r\n            levelOfAuthentication: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // access token verification goes here:\r\n        // ==== ==== ==== ====\r\n            if (this.state.accessToken !== null && this.state.accessToken !== \"\") {\r\n                this.setState({ isAuthenticated: true });\r\n            }\r\n        // ==== ==== ==== ====\r\n        this.setState({ isAuthenticating: false });\r\n    }\r\n\r\n    // Method to toggle User authentication\r\n    setAuthentication = (value) => {\r\n        this.setState({ isAuthenticated: value });\r\n    }\r\n\r\n    // Method to set Access Token\r\n    setAccessToken = (value) => {\r\n        this.setState({ accessToken: value });\r\n    }\r\n\r\n    render() {\r\n        const childProps = {\r\n            isAuth: this.state.isAuthenticated,\r\n            levelAuth: this.state.levelOfAuthentication,\r\n            accessToken: this.state.accessToken,\r\n            setAuth: this.setAuthentication,\r\n            setToken: this.setAccessToken\r\n        };\r\n\r\n        return (\r\n            !this.state.isAuthenticating &&\r\n            <div className=\"App\">\r\n                <Routes childProps={childProps} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// following lines import the MDBReact package files\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}